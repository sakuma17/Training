1.以下のようにデータベースを作成する。
CREATE DATABASE rpg_app
DEFAULT CHARACTER SET utf8;

2.以下のようにパーティーテーブルを作成し、データを挿入する。
CREATE TABLE パーティー(
id CHAR(3),
名称 VARCHAR(20),
職業コード CHAR(2),
hp INT,
mp INT,
状態コード CHAR(2)
);

INSERT INTO パーティー
VALUES('C01','ミナト','01',89,35,'00'),
('C02','アサカ','11',74,66,'00');

3.以下のようにイベントテーブルを作成し、データを挿入する。

CREATE TABLE イベント(
イベント番号 INT PRIMARY KEY AUTO_INCREMENT,
イベント名称 VARCHAR(50),
タイプ CHAR(1),
前提イベント番号 INT,
後続イベント番号 INT
);

INSERT INTO イベント(イベント名称,タイプ,前提イベント番号,後続イベント番号)
VALUES
('オープニング','1',null,3),
('オープニング（2週目以降）','3',null,3),
('勇者の旅立ち','1',null,4),
('初めての仲間','1',3,5),
('盗賊ダンシーを追え！','1',4,7),
('宝石の洞窟','2',null,null),
('イガヤの町の秘密','1',5,9),
('妖精の森の下で','2',null,null),
('潜入！バクロック城','1',7,10),
('師との出会い','1',9,12),
('隠れ里ボウジーン','2',null,null),
('ドウンブリッジの戦い','1',10,15),
('名誉を賭して','2',null,18),
('ナボーリ火山と三つの島','2',null,null),
('水の洞窟に潜むもの','1',12,17),
('盗賊ダンシーの依頼','2',5,null),
('封印の町ノザ','1',15,22),
('聖騎士の涙','2',13,null),
('賢者の婚姻','2',17,null),
('王位継承者の帰郷','2',17,null),
('新大陸の魔女','2',17,null),
('それぞれの願いのために','1',17,23),
('最終決戦','1',22,24),
('そして世界のはじまりに','1',23,null),
('エンディング','1',24,null),
('エンディング(2週目以降)','3',24,null);

4.以下のように経験イベントテーブルを作成し、データを挿入する。
CREATE TABLE 経験イベント(
イベント番号 INT,
クリア区分 CHAR(1),
クリア結果 CHAR(1),
ルート番号 INT
);
INSERT INTO 経験イベント VALUES
(1,'1','A',1),
(3,'1','B',2),
(4,'1','A',3),
(5,'1','B',4),
(6,'1','C',5),
(7,'1','B',6),
(9,'0',null,7);

5.以下のようにコードテーブルを作成し、データを挿入する。
CREATE TABLE コード(
コード種別 INT,
コード値 CHAR(2),
コード名称 VARCHAR(100)
);

INSERT INTO コード VALUES
(1,'01','勇者'),
(1,'10','戦士'),
(1,'11','武闘家'),
(1,'12','忍者'),
(1,'13','聖騎士'),
(1,'14','竜騎士'),
(1,'15','魔剣士'),
(1,'20','魔法使い'),
(1,'21','学者'),
(1,'22','僧侶'),
(1,'23','賢者'),
(1,'24','踊り子'),
(1,'25','吟遊詩人'),
(2,'00','異常なし'),
(2,'01','眠り'),
(2,'02','毒'),
(2,'03','沈黙'),
(2,'04','混乱'),
(2,'09','気絶'),
(3,'01','強制'),
(3,'02','フリー'),
(3,'03','特殊'),
(4,'A','たいへんよくできました'),
(4,'B','よくできました'),
(4,'C','もう少し頑張りましょう'),
(4,'X','判定不能');

6.上記４つのテーブルを使って以下の問に答えよ。
1.主人公のパーティにいるキャラクターの全データをパーティーテーブルから抽出せよ。
SELECT * FROM パーティー;

2.パーティーテーブルから、名称、HP､MPの一覧を取得する。各見出しは次のように表示すること。
・なまえ　・現在のHP　・現在のMP
SELECT 名称 AS なまえ,hp AS 現在のHP,mp AS 現在のMP FROM パーティー;

3.現在設定されているイベントの全データをイベントテーブルから抽出する。ただし「*｣を用いること
SELECT * FROM イベント;

4.イベントテーブルから、イベント番号とイベント名称の一覧を取得する。各見出しは次のように表示すること
・番号　・場面
SELECT イベント番号 AS 番号,イベント名称 AS 場面 FROM イベント;

5.パーティーテーブルに、次の３つのデータを追加する。
ID：A01、A02、A03
名称：スガワラ､オーエ,イズミ
職業コード：21、10､20
HP:131、156、84
MP:232、84、190

INSERT INTO パーティー(id,名称,職業コード,hp,mp)
VALUES
('A01','スガワラ',21,131,232),
('A02','オーエ',10,156,84),
('A03','イズミ',20,84,190);

LEVEL2
6.パーティーテーブルから、IDが「C02]のデータを抽出する。
SELECT * FROM パーティー WHERE id='c02';

7.パーティーテーブルのID「A01｣のデータについて、HPを120に更新する。
UPDATE パーティー SET
hp=120 WHERE id='A01';

8.ﾊﾟｰﾃｨｰテーブルから、HPが100未満のデータについて、ID,名称、HPの一覧を抽出する。
SELECT id,名称,hp
FROM パーティー
WHERE hp<100;

9．パーティーテーブルから、MPが100以上のデータについてID、名称、MPの一覧を抽出する。
SELECT id,名称,mp
FROM パーティー
WHERE MP>=100;

10. イベントテーブルから、タイプが「特殊」でないデータについて、イベント番号、イベント名称、タイプの一覧を抽出する。
[Tips]WHERE タイプ<>‘3’でOK
SELECT イベント番号,イベント名称,タイプ
FROM イベント
WHERE タイプ<>'3';

11．イベントテーブルから、イベント番号が5以下のデータについて、イベント番号とイベント名称を抽出する。
SELECT イベント番号,イベント名称
FROM イベント
WHERE イベント番号<=5;

12．イベントテーブルから、イベント番号が20を超過しているデータについて、イベント番号とイベント名称を抽出する。
SELECT イベント番号,イベント名称
FROM イベント
WHERE イベント番号>20;

13．イベントテーブルから、別のイベントのクリアを前提としないイベントについて、イベント番号とイベント名称を抽出する。
SELECT イベント番号,イベント名称
FROM イベント
WHERE 前提イベント番号 IS NULL;

14．イベントテーブルから、次に発生するイベントが決められているイベントについて、イベント番号、イベント名称、後続イベント番号を抽出する。
SELECT イベント番号,イベント名称,後続イベント番号
FROM イベント
WHERE 後続イベント番号 IS NOT NULL;

15．名称に「ミ」が含まれるパーティーグループのデータについて、状態コードを「眠り」に更新する。
UPDATE パーティー SET
状態コード='01'
WHERE 名称 LIKE '%ミ%';

16．HPが120~160の範囲にあるパーティーテーブルのデータについて、ID,名称、HPの一覧を抽出する。ただし、記述条件は１つであること。
[Tips]BETWEENを使う
SELECT id,名称,hp
FROM パーティー
WHERE HP BETWEEN 120 AND 160;

17．職業が「勇者」、「戦士」、「武道家」のいずれかであるパーティーテーブルのデータについて、名称と職業コードを抽出する。ただし、記述する条件式は１つであること
[Tips]IN()を使う
SELECT 名称,職業コード
FROM パーティー
WHERE 職業コード IN('01','10','11');

18．状態コードが「異常なし」と「気絶」のどちらでもないパーティーグループのデータについて名称と状態コードを抽出する。ただし、記述する条件式は１つであること。
SELECT 名称,状態コード
FROM パーティー
WHERE 状態コード NOT IN('00','09');

19．パーティーテーブルから、HPとMPがともに100を超えているデータを抽出する。
SELECT *
FROM パーティー
WHERE HP>100 AND MP>100;

20．パーティーテーブルから、IDが「A」で始まり、職業コードの１文字目が「２」であるデータを抽出する。
SELECT *
FROM パーティー
WHERE id LIKE 'A%' AND 職業コード LIKE '2%';

21．イベントテーブルから、タイプが「強制」で、事前にクリアが必要なイベントで、かつ次に発生するイベントが設定されているデータを抽出する。
[Tips]
この条件に一致するデータ現段階ではないかも・・・

22．パーティーテーブルとイベントテーブルそれぞれについて、主キーの役割を果たしている列名を日本語で解答する。

LEVEL3
23. パーティーテーブルから、パーティーの現在の状態コード一覧を取得する。重複は除外すること。
24. パーティーテーブルから、IDと名称をIDの昇順に抽出する。
25. パーティーテーブルから、名称と職業コードを名称の逆順に抽出する。
26. パーティーテーブルから、名称,HP,状態コードを、状態コードの昇順かつHPの高い順に抽出する。
27．イベントテーブルから、タイプ、イベント番号、イベント名称、前提イベント番号、後続イベント番号をタイプの昇順かつイベント番号の昇順に抽出する。並び替えには列番号を用いること。
[Tips]
ORDER BYの列指定には列番号を用いることができる。
列番号とは選択列リストにおける列の番号のことで、SELECT命令に記述した順に1から数える。

28. パーティーテーブルから、HPの高い順に3件抽出する。
29. パーティーテーブルから、MPが3番目に高いデータを抽出する。
30. パーティーテーブルから、次の形式の一覧を取得する。
・職業区分 ・職業コード　・ID　・名称
職業区分は、物理攻撃の得意なもの(職業コードが1から始まる)を[S],魔法攻撃の得意なもの(職業コードが2から始まる)を[M],それ以外を[A]と表示すること。また一覧は職業コード順とすること。

31. イベントテーブルと経験イベントテーブルから、まだ参加していないイベント番号を抽出する。イベント番号順に表示すること。
[tips]まだ参加していない->経験イベントテーブルあるデータを除外
副問い合わせを用いWHERE句を以下のように記述するとよい
WHERE イベント番号 NOT IN(SELECT イベント番号 FROM 経験イベント)

32. イベントテーブルと経験イベントテーブルから、すでにクリアされたイベントのうちタイプがフリーのイベント番号を抽出する。
[tips]すでにクリアされた->経験イベントテーブルある
副問い合わせを用いWHERE句を以下のように記述するとよい

WHERE イベント番号 IN(SELECT イベント番号 FROM 経験イベント WHERE クリア区分='1')
AND タイプ = '2'

level4
33. アイテム「勇気の鈴」を装備すると、HPが50ポイントアップする。このアイテムを装備したときの各キャラクターのHPを適切な列を用いて次の別名で取得する。ただし、このアイテムは「武道家」と「学者」しか装備できない。
・なまえ ・現在のHP　・装備後のHP

34. ID[A01]と[A03]のキャラクターがアイテム「知恵の指輪」を装備し、MPが20ポイントアップした。その該当データのMPを更新する。

35. 武道家の技「スッキリパンチ」は、自分のHPを2倍したポイントのダメージを敵に与える。この技を使った時のダメージを適切な列を用いて次の別名で抽出する。
・なまえ ・現在のHP　・予想されるダメージ

36. 現在、主人公のパーティーにいるキャラクターの状況について、適切な列を用いて
次の別名で一覧を作成する。
・なまえ ・HPとMP　・ステータス
HPとMPはMPを[/]でつなげたもの、ステータスには状態コードを日本語で置き換えたものを表示すること。ただし、ステータスに異常がない場合には何も表示しない。

[Tips]ムズイ。コードテーブルをコード種別で絞りんこんでLEFT JOINする。
SELECT
〜ここを記述する〜
FROM パーティー AS p
LEFT JOIN (SELECT * FROM コード WHERE コード種別=2) AS c
ON p.状態コード = c.コード値

37．イベントテーブルから、次の形式でイベント一覧を取得する。
・イベント番号　・イベント名称 ・タイプ ・発生時期
タイプはコードを日本語で置き換えたもの、発生時期は次の条件に応じたものを表示すること。
・イベント番号が1から10なら「序盤」
・イベント番号が11から17なら「中盤」
・上記意外なら「終盤」

[Tips]
結合は使わない。CASEで場合分け。

38. 敵の攻撃「ネームバリュー」は、名前の文字数を10倍したポイントのダメージがある。
この攻撃を受けた時の各キャラクターの予想ダメージを適切な列を用いて次の別名で取得する。
・なまえ ・現在のHP ・予想ダメージ

39. 敵の「四苦八苦」を受け、HPまたはMPが4で割り切れるキャラクターは混乱した。
該当データの状態コードを更新する。なお、剰余の計算には%演算子を用いる

40. 町の道具屋で売値が777のアイテム「女神の祝福」を買ったところ、会員証を持っているため30%割引で購入できた。この際に支払った金額を求める。端数は切り捨て。


41. 戦闘中にアイテム「女神の祝福」を使ったところ、全員のHPとMPがそれまでの値に対して3割りほど回復した。該当するデータを更新する。ただし、端数は四捨五入すること。
[Tips]
四捨五入は以下の関数を用いる

1
ROUND(数値を表す列,有効とする桁数)
2
有効桁が正の場合は少数部の桁数、負の場合は整数部の桁数
[例]

1
ROUND(3.141592,2) -->3.14
2
ROUND(380,-2) -->400
42. 戦士の技「Step by Step」は、攻撃の回数だけ自分のHPをべき乗したポイントのダメージを与える。3回攻撃したときの、各回の攻撃ポイントを適切な列を用いて次の別名で取得する。ただし、1回目は0乗から始まる。

・なまえ ・HP ・攻撃1回目 ・攻撃2回目 ・攻撃3回目
[Tips]
べき乗は以下の関数を用いる

1
POWER(数値を表す列,何乗するかの数値)
[例]

1
POWER(4,2) -->16
2
POWER(4,3) -->64
[Tips]
Step by Stepぶっ壊れ性能ですね！。戦士限定なのをお忘れなく。

43. 現在、主人公のパーティーにいるキャラクターの状況について、HPと状態コードから、リスクを重み付けした一覧を適切な列を用いて次の別名で取得する。
・なまえ　・HP ・状態コード ・リスク値
リスク値には、次の条件に従った値を算出する。
・HPが50以下ならリスク値3
・HPが51以上100以下ならリスク値2
・HPが101以上150以下ならリスク値1
・HPがそれ以外ならリスク値0
・状態コードの値をリスク値に加算
リスクの高い順かつHPの低い順にキャラクターを表示する。
[Tips]
型変換をする際は以下の関数を用いる

1
CAST(expr AS type)
[例]

1
CAST(状態コード AS SIGNED) -->正の整数にキャスト
44.イベントテーブルより、イベントの一覧をイベント番号順に次の形式で取得する。
・前提イベント番号 ・イベント番号 ・後続イベント番号
前提または後続イベントがない場合は、それぞれ「前提なし」「後続なし」と表示すること
